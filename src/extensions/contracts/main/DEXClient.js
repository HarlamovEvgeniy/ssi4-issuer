module.exports = {
  DEXClientContract: {
    abi: {
      "ABI version": 2,
      version: "2.2",
      header: ["pubkey", "time", "expire"],
      functions: [
        {
          name: "constructor",
          inputs: [{name: "ownerAddr", type: "address"}],
          outputs: [],
        },
        {
          name: "connectPair",
          inputs: [{name: "pairAddr", type: "address"}],
          outputs: [{name: "statusConnection", type: "bool"}],
        },
        {
          name: "setPair",
          inputs: [
            {name: "arg0", type: "address"},
            {name: "arg1", type: "address"},
            {name: "arg2", type: "address"},
            {name: "arg3", type: "address"},
            {name: "arg4", type: "address"},
          ],
          outputs: [],
        },
        {
          name: "getConnectorAddress",
          inputs: [
            {name: "answerId", type: "uint32"},
            {name: "connectorSoArg", type: "uint256"},
          ],
          outputs: [{name: "value0", type: "address"}],
        },
        {
          name: "connectRoot",
          inputs: [
            {name: "root", type: "address"},
            {name: "souint", type: "uint256"},
            {name: "gramsToConnector", type: "uint128"},
            {name: "gramsToRoot", type: "uint128"},
          ],
          outputs: [{name: "statusConnected", type: "bool"}],
        },
        {
          name: "connectCallback",
          inputs: [{name: "wallet", type: "address"}],
          outputs: [],
        },
        {
          name: "getAllDataPreparation",
          inputs: [],
          outputs: [
            {name: "pairKeysR", type: "address[]"},
            {name: "rootKeysR", type: "address[]"},
          ],
        },
        {
          name: "processSwapA",
          inputs: [
            {name: "pairAddr", type: "address"},
            {name: "qtyA", type: "uint128"},
            {name: "minQtyB", type: "uint128"},
            {name: "maxQtyB", type: "uint128"},
          ],
          outputs: [{name: "processSwapStatus", type: "bool"}],
        },
        {
          name: "processSwapB",
          inputs: [
            {name: "pairAddr", type: "address"},
            {name: "qtyB", type: "uint128"},
            {name: "minQtyA", type: "uint128"},
            {name: "maxQtyA", type: "uint128"},
          ],
          outputs: [{name: "processSwapStatus", type: "bool"}],
        },
        {
          name: "processLiquidity",
          inputs: [
            {name: "pairAddr", type: "address"},
            {name: "qtyA", type: "uint128"},
            {name: "qtyB", type: "uint128"},
          ],
          outputs: [{name: "processLiquidityStatus", type: "bool"}],
        },
        {
          name: "returnLiquidity",
          inputs: [
            {name: "pairAddr", type: "address"},
            {name: "tokens", type: "uint128"},
          ],
          outputs: [{name: "returnLiquidityStatus", type: "bool"}],
        },
        {
          name: "tokensReceivedCallback",
          inputs: [
            {name: "token_wallet", type: "address"},
            {name: "token_root", type: "address"},
            {name: "amount", type: "uint128"},
            {name: "sender_public_key", type: "uint256"},
            {name: "sender_address", type: "address"},
            {name: "sender_wallet", type: "address"},
            {name: "original_gas_to", type: "address"},
            {name: "updated_balance", type: "uint128"},
            {name: "payload", type: "cell"},
          ],
          outputs: [],
        },
        {
          name: "createNewPair",
          inputs: [
            {name: "root0", type: "address"},
            {name: "root1", type: "address"},
            {name: "pairSoArg", type: "uint256"},
            {name: "connectorSoArg0", type: "uint256"},
            {name: "connectorSoArg1", type: "uint256"},
            {name: "rootSoArg", type: "uint256"},
            {name: "rootName", type: "string"},
            {name: "rootSymbol", type: "string"},
            {name: "rootDecimals", type: "uint8"},
            {name: "grammsForPair", type: "uint128"},
            {name: "grammsForRoot", type: "uint128"},
            {name: "grammsForConnector", type: "uint128"},
            {name: "grammsForWallet", type: "uint128"},
            {name: "grammsTotal", type: "uint128"},
          ],
          outputs: [],
        },
        {
          name: "getPairData",
          inputs: [{name: "pairAddr", type: "address"}],
          outputs: [
            {name: "pairStatus", type: "bool"},
            {name: "pairRootA", type: "address"},
            {name: "pairWalletA", type: "address"},
            {name: "pairRootB", type: "address"},
            {name: "pairWalletB", type: "address"},
            {name: "pairRootAB", type: "address"},
            {name: "curPair", type: "address"},
          ],
        },
        {
          name: "sendTokens",
          inputs: [
            {name: "tokenRoot", type: "address"},
            {name: "to", type: "address"},
            {name: "tokens", type: "uint128"},
            {name: "grams", type: "uint128"},
          ],
          outputs: [{name: "sendTokenStatus", type: "bool"}],
        },
        {
          name: "sendTransaction",
          inputs: [
            {name: "dest", type: "address"},
            {name: "value", type: "uint128"},
            {name: "bounce", type: "bool"},
            {name: "flags", type: "uint8"},
            {name: "payload", type: "cell"},
          ],
          outputs: [],
        },
        {
          name: "deployLockStakeSafeCallback",
          inputs: [
            {name: "lockStakeSafe", type: "address"},
            {name: "nftKey", type: "address"},
            {name: "amount", type: "uint128"},
            {name: "period", type: "uint256"},
          ],
          outputs: [],
        },
        {
          name: "transferOwnershipCallback",
          inputs: [
            {name: "addrFrom", type: "address"},
            {name: "addrTo", type: "address"},
          ],
          outputs: [],
        },
        {
          name: "processLiquidityCallback",
          inputs: [
            {name: "walletA", type: "address"},
            {name: "amountA", type: "uint128"},
            {name: "provideA", type: "uint128"},
            {name: "unusedReturnA", type: "uint128"},
            {name: "walletB", type: "address"},
            {name: "amountB", type: "uint128"},
            {name: "provideB", type: "uint128"},
            {name: "unusedReturnB", type: "uint128"},
            {name: "walletAB", type: "address"},
            {name: "mintAB", type: "uint128"},
          ],
          outputs: [],
        },
        {
          name: "returnLiquidityCallback",
          inputs: [
            {name: "walletAB", type: "address"},
            {name: "burnAB", type: "uint128"},
            {name: "walletA", type: "address"},
            {name: "returnA", type: "uint128"},
            {name: "walletB", type: "address"},
            {name: "returnB", type: "uint128"},
          ],
          outputs: [],
        },
        {
          name: "limitOrderCallback",
          inputs: [
            {name: "status", type: "uint8"},
            {name: "addrOrder", type: "address"},
            {name: "addrOwner", type: "address"},
            {name: "addrPair", type: "address"},
            {name: "directionPair", type: "uint8"},
            {name: "price", type: "uint128"},
            {name: "amount", type: "uint128"},
            {name: "walletOwnerFrom", type: "address"},
            {name: "walletOwnerTo", type: "address"},
          ],
          outputs: [],
        },
        {
          name: "makeLimitOrderA",
          inputs: [
            {name: "routerWalletA", type: "address"},
            {name: "pairAddr", type: "address"},
            {name: "qtyA", type: "uint128"},
            {name: "priceA", type: "uint128"},
            {name: "souint", type: "uint256"},
          ],
          outputs: [{name: "makeLimitOrderStatus", type: "bool"}],
        },
        {
          name: "makeLimitOrderB",
          inputs: [
            {name: "routerWalletB", type: "address"},
            {name: "pairAddr", type: "address"},
            {name: "qtyB", type: "uint128"},
            {name: "priceB", type: "uint128"},
            {name: "souint", type: "uint256"},
          ],
          outputs: [{name: "makeLimitOrderStatus", type: "bool"}],
        },
        {
          name: "transferLimitOrder",
          inputs: [
            {name: "limitOrder", type: "address"},
            {name: "addrNewOwner", type: "address"},
            {name: "walletNewOwnerFrom", type: "address"},
            {name: "walletNewOwnerTo", type: "address"},
          ],
          outputs: [{name: "transferLimitOrderStatus", type: "bool"}],
        },
        {
          name: "changeLimitOrderPrice",
          inputs: [
            {name: "limitOrder", type: "address"},
            {name: "newPrice", type: "uint128"},
          ],
          outputs: [{name: "changePriceStatus", type: "bool"}],
        },
        {
          name: "cancelLimitOrder",
          inputs: [{name: "limitOrder", type: "address"}],
          outputs: [{name: "cancelOrderStatus", type: "bool"}],
        },
        {
          name: "takeLimitOrderA",
          inputs: [
            {name: "pairAddr", type: "address"},
            {name: "limitOrderA", type: "address"},
            {name: "routerWalletB", type: "address"},
            {name: "qtyB", type: "uint128"},
            {name: "priceB", type: "uint128"},
          ],
          outputs: [{name: "takeLimitOrderStatus", type: "bool"}],
        },
        {
          name: "takeLimitOrderB",
          inputs: [
            {name: "pairAddr", type: "address"},
            {name: "limitOrderB", type: "address"},
            {name: "routerWalletA", type: "address"},
            {name: "qtyA", type: "uint128"},
            {name: "priceA", type: "uint128"},
          ],
          outputs: [{name: "takeLimitOrderStatus", type: "bool"}],
        },
        {
          name: "rootDEX",
          inputs: [],
          outputs: [{name: "rootDEX", type: "address"}],
        },
        {
          name: "soUINT",
          inputs: [],
          outputs: [{name: "soUINT", type: "uint256"}],
        },
        {
          name: "codeDEXConnector",
          inputs: [],
          outputs: [{name: "codeDEXConnector", type: "cell"}],
        },
        {
          name: "owner",
          inputs: [],
          outputs: [{name: "owner", type: "address"}],
        },
        {
          name: "rootKeys",
          inputs: [],
          outputs: [{name: "rootKeys", type: "address[]"}],
        },
        {
          name: "rootWallet",
          inputs: [],
          outputs: [{name: "rootWallet", type: "map(address,address)"}],
        },
        {
          name: "rootConnector",
          inputs: [],
          outputs: [{name: "rootConnector", type: "map(address,address)"}],
        },
        {
          name: "souintLast",
          inputs: [],
          outputs: [{name: "souintLast", type: "uint256"}],
        },
        {
          name: "pc",
          inputs: [],
          outputs: [
            {
              components: [
                {name: "pcType", type: "uint8"},
                {name: "pcFrom", type: "address"},
              ],
              name: "pc",
              type: "tuple",
            },
          ],
        },
        {
          name: "pairs",
          inputs: [],
          outputs: [
            {
              components: [
                {name: "status", type: "bool"},
                {name: "rootA", type: "address"},
                {name: "walletA", type: "address"},
                {name: "rootB", type: "address"},
                {name: "walletB", type: "address"},
                {name: "rootAB", type: "address"},
              ],
              name: "pairs",
              type: "map(address,tuple)",
            },
          ],
        },
        {
          name: "pairKeys",
          inputs: [],
          outputs: [{name: "pairKeys", type: "address[]"}],
        },
      ],
      data: [
        {key: 1, name: "rootDEX", type: "address"},
        {key: 2, name: "soUINT", type: "uint256"},
        {key: 3, name: "codeDEXConnector", type: "cell"},
      ],
      events: [],
      fields: [
        {name: "_pubkey", type: "uint256"},
        {name: "_timestamp", type: "uint64"},
        {name: "_constructorFlag", type: "bool"},
        {name: "rootDEX", type: "address"},
        {name: "soUINT", type: "uint256"},
        {name: "codeDEXConnector", type: "cell"},
        {name: "owner", type: "address"},
        {name: "rootKeys", type: "address[]"},
        {name: "rootWallet", type: "map(address,address)"},
        {name: "rootConnector", type: "map(address,address)"},
        {
          components: [
            {name: "root_address", type: "address"},
            {name: "souint", type: "uint256"},
            {name: "status", type: "bool"},
          ],
          name: "connectors",
          type: "map(address,tuple)",
        },
        {name: "souintLast", type: "uint256"},
        {
          components: [
            {name: "pcType", type: "uint8"},
            {name: "pcFrom", type: "address"},
          ],
          name: "pc",
          type: "tuple",
        },
        {
          components: [
            {name: "status", type: "bool"},
            {name: "rootA", type: "address"},
            {name: "walletA", type: "address"},
            {name: "rootB", type: "address"},
            {name: "walletB", type: "address"},
            {name: "rootAB", type: "address"},
          ],
          name: "pairs",
          type: "map(address,tuple)",
        },
        {name: "pairKeys", type: "address[]"},
      ],
    },
    tvc: "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",
    code: "",
  },
};
