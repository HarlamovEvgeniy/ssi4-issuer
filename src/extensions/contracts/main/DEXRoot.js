module.exports = {
  DEXRootContract: {
    abi: {
      "ABI version": 2,
      version: "2.2",
      header: ["pubkey", "time", "expire"],
      functions: [
        {
          name: "constructor",
          inputs: [
            {name: "_governance", type: "address"},
            {name: "_rootDEX", type: "address"},
            {name: "_souintFor", type: "uint256"},
            {name: "_souintAgainst", type: "uint256"},
            {name: "_gramsToConnector", type: "uint128"},
            {name: "_gramsToRoot", type: "uint128"},
            {name: "_codeConnector", type: "cell"},
          ],
          outputs: [],
        },
        {
          name: "setDEXclientCode",
          inputs: [{name: "code", type: "cell"}],
          outputs: [{name: "isSuccess", type: "bool"}],
        },
        {
          name: "setDEXpairCode",
          inputs: [{name: "code", type: "cell"}],
          outputs: [{name: "isSuccess", type: "bool"}],
        },
        {
          name: "setRootTokenCode",
          inputs: [{name: "code", type: "cell"}],
          outputs: [{name: "isSuccess", type: "bool"}],
        },
        {
          name: "setTONTokenWalletCode",
          inputs: [{name: "code", type: "cell"}],
          outputs: [{name: "isSuccess", type: "bool"}],
        },
        {
          name: "getClientAddress",
          inputs: [
            {name: "answerId", type: "uint32"},
            {name: "clientPubKey", type: "uint256"},
            {name: "clientSoArg", type: "uint256"},
          ],
          outputs: [{name: "value0", type: "address"}],
        },
        {
          name: "createDEXclient",
          inputs: [
            {name: "pubkey", type: "uint256"},
            {name: "souint", type: "uint256"},
          ],
          outputs: [],
        },
        {
          name: "createDEXclientCallback",
          inputs: [
            {name: "pubkey", type: "uint256"},
            {name: "deployedAddress", type: "address"},
            {name: "owner", type: "address"},
          ],
          outputs: [],
        },
        {
          name: "getPairAddress",
          inputs: [
            {name: "answerId", type: "uint32"},
            {name: "pairPubKey", type: "uint256"},
            {name: "pairSoArg", type: "uint256"},
            {name: "pairCreator", type: "address"},
            {name: "pairRootA", type: "address"},
            {name: "pairRootB", type: "address"},
          ],
          outputs: [{name: "value0", type: "address"}],
        },
        {
          name: "getRootTokenAddress",
          inputs: [
            {name: "answerId", type: "uint32"},
            {name: "rootName", type: "string"},
            {name: "rootSymbol", type: "string"},
            {name: "rootDecimals", type: "uint8"},
            {name: "rootOwner_", type: "address"},
            {name: "rootSoArg", type: "uint256"},
            {name: "rootDeployer", type: "address"},
          ],
          outputs: [{name: "value0", type: "address"}],
        },
        {
          name: "getConnectorAddress",
          inputs: [
            {name: "answerId", type: "uint32"},
            {name: "connectorPubKey", type: "uint256"},
            {name: "connectorSoArg", type: "uint256"},
            {name: "connectorCommander", type: "address"},
          ],
          outputs: [{name: "value0", type: "address"}],
        },
        {
          name: "createDEXpair",
          inputs: [
            {name: "root0", type: "address"},
            {name: "root1", type: "address"},
            {name: "pairSoArg", type: "uint256"},
            {name: "connectorSoArg0", type: "uint256"},
            {name: "connectorSoArg1", type: "uint256"},
            {name: "rootSoArg", type: "uint256"},
            {name: "rootName", type: "string"},
            {name: "rootSymbol", type: "string"},
            {name: "rootDecimals", type: "uint8"},
            {name: "grammsForPair", type: "uint128"},
            {name: "grammsForRoot", type: "uint128"},
            {name: "grammsForConnector", type: "uint128"},
            {name: "grammsForWallet", type: "uint128"},
          ],
          outputs: [],
        },
        {
          name: "depRoot",
          inputs: [
            {name: "rootSoArg", type: "uint256"},
            {name: "rootName", type: "string"},
            {name: "rootSymbol", type: "string"},
            {name: "rootDecimals", type: "uint8"},
            {name: "pairAddress", type: "address"},
          ],
          outputs: [
            {name: "value0", type: "address"},
            {name: "value1", type: "address"},
          ],
        },
        {
          name: "createDEXpairCallback",
          inputs: [
            {name: "root0", type: "address"},
            {name: "root1", type: "address"},
            {name: "root01", type: "address"},
          ],
          outputs: [],
        },
        {
          name: "getDetailsCallback",
          inputs: [{name: "root_owner_address", type: "address"}],
          outputs: [],
        },
        {
          name: "getPairByRoots01",
          inputs: [
            {name: "root0", type: "address"},
            {name: "root1", type: "address"},
          ],
          outputs: [{name: "pairAddr", type: "address"}],
        },
        {
          name: "getPairByRoots10",
          inputs: [
            {name: "root1", type: "address"},
            {name: "root0", type: "address"},
          ],
          outputs: [{name: "pairAddr", type: "address"}],
        },
        {
          name: "getRootsByPair",
          inputs: [{name: "pairAddr", type: "address"}],
          outputs: [
            {name: "root0", type: "address"},
            {name: "root1", type: "address"},
          ],
        },
        {
          name: "checkPubKey",
          inputs: [{name: "pubkey", type: "uint256"}],
          outputs: [
            {name: "status", type: "bool"},
            {name: "dexclient", type: "address"},
          ],
        },
        {
          name: "getBalanceTONgrams",
          inputs: [],
          outputs: [{name: "balanceTONgrams", type: "uint128"}],
        },
        {
          name: "encodePayload",
          inputs: [{name: "payload", type: "cell"}],
          outputs: [
            {name: "arg0", type: "uint8"},
            {name: "arg1", type: "address"},
            {name: "arg2", type: "address"},
            {name: "arg3", type: "uint128"},
            {name: "arg4", type: "uint128"},
          ],
        },
        {
          name: "computeCodeHash",
          inputs: [{name: "code", type: "cell"}],
          outputs: [{name: "value0", type: "uint256"}],
        },
        {
          name: "hashTokenRoot",
          inputs: [],
          outputs: [{name: "value0", type: "uint256"}],
        },
        {
          name: "sendTransaction",
          inputs: [
            {name: "dest", type: "address"},
            {name: "value", type: "uint128"},
            {name: "bounce", type: "bool"},
            {name: "flags", type: "uint8"},
            {name: "payload", type: "cell"},
          ],
          outputs: [],
        },
        {
          name: "connectCallback",
          inputs: [{name: "wallet", type: "address"}],
          outputs: [],
        },
        {
          name: "createVote",
          inputs: [
            {name: "duration", type: "uint256"},
            {name: "code", type: "cell"},
            {name: "pointer", type: "uint8"},
            {name: "selector", type: "uint8"},
          ],
          outputs: [{name: "isSuccess", type: "bool"}],
        },
        {
          name: "tokensReceivedCallback",
          inputs: [
            {name: "token_wallet", type: "address"},
            {name: "token_root", type: "address"},
            {name: "amount", type: "uint128"},
            {name: "sender_public_key", type: "uint256"},
            {name: "sender_address", type: "address"},
            {name: "sender_wallet", type: "address"},
            {name: "original_gas_to", type: "address"},
            {name: "updated_balance", type: "uint128"},
            {name: "payload", type: "cell"},
          ],
          outputs: [],
        },
        {
          name: "calculateVotes",
          inputs: [
            {name: "yes", type: "uint32"},
            {name: "no", type: "uint32"},
            {name: "total", type: "uint32"},
            {name: "selector", type: "uint8"},
          ],
          outputs: [{name: "value0", type: "bool"}],
        },
        {
          name: "resultVote",
          inputs: [],
          outputs: [{name: "isSuccess", type: "bool"}],
        },
        {
          name: "resultVoteCallback",
          inputs: [{name: "total_supply", type: "uint128"}],
          outputs: [],
        },
        {
          name: "soUINT",
          inputs: [],
          outputs: [{name: "soUINT", type: "uint256"}],
        },
        {
          name: "codeDEXclient",
          inputs: [],
          outputs: [{name: "codeDEXclient", type: "cell"}],
        },
        {
          name: "codeDEXpair",
          inputs: [],
          outputs: [{name: "codeDEXpair", type: "cell"}],
        },
        {
          name: "codeDEXconnector",
          inputs: [],
          outputs: [{name: "codeDEXconnector", type: "cell"}],
        },
        {
          name: "codeRootToken",
          inputs: [],
          outputs: [{name: "codeRootToken", type: "cell"}],
        },
        {
          name: "codeTONTokenWallet",
          inputs: [],
          outputs: [{name: "codeTONTokenWallet", type: "cell"}],
        },
        {
          name: "isCodeInit",
          inputs: [],
          outputs: [{name: "isCodeInit", type: "map(uint8,bool)"}],
        },
        {
          name: "governance",
          inputs: [],
          outputs: [{name: "governance", type: "address"}],
        },
        {
          name: "rootDEX",
          inputs: [],
          outputs: [{name: "rootDEX", type: "address"}],
        },
        {
          name: "voteForWalletDEX",
          inputs: [],
          outputs: [{name: "voteForWalletDEX", type: "address"}],
        },
        {
          name: "voteAgainstWalletDEX",
          inputs: [],
          outputs: [{name: "voteAgainstWalletDEX", type: "address"}],
        },
        {
          name: "walletsCount",
          inputs: [],
          outputs: [{name: "walletsCount", type: "uint8"}],
        },
        {
          name: "pairs",
          inputs: [],
          outputs: [
            {
              components: [
                {name: "root0", type: "address"},
                {name: "root1", type: "address"},
                {name: "rootLP", type: "address"},
              ],
              name: "pairs",
              type: "map(address,tuple)",
            },
          ],
        },
        {
          name: "pairKeys",
          inputs: [],
          outputs: [{name: "pairKeys", type: "address[]"}],
        },
        {
          name: "creatorForPair",
          inputs: [],
          outputs: [{name: "creatorForPair", type: "map(address,address)"}],
        },
        {
          name: "dataForRootAB",
          inputs: [],
          outputs: [
            {
              components: [
                {name: "pair", type: "address"},
                {name: "root0", type: "address"},
                {name: "root1", type: "address"},
              ],
              name: "dataForRootAB",
              type: "map(address,tuple)",
            },
          ],
        },
        {
          name: "pubkeys",
          inputs: [],
          outputs: [{name: "pubkeys", type: "map(uint256,address)"}],
        },
        {
          name: "clients",
          inputs: [],
          outputs: [{name: "clients", type: "map(address,uint256)"}],
        },
        {
          name: "clientKeys",
          inputs: [],
          outputs: [{name: "clientKeys", type: "address[]"}],
        },
        {
          name: "balanceOf",
          inputs: [],
          outputs: [{name: "balanceOf", type: "map(address,uint128)"}],
        },
        {
          name: "msgOf",
          inputs: [],
          outputs: [{name: "msgOf", type: "map(address,string)"}],
        },
        {
          name: "vote",
          inputs: [],
          outputs: [
            {
              components: [
                {name: "start", type: "uint256"},
                {name: "duration", type: "uint256"},
                {name: "code", type: "cell"},
                {name: "pointer", type: "uint8"},
                {name: "selector", type: "uint8"},
                {name: "voteFor", type: "uint128"},
                {name: "voteAgainst", type: "uint128"},
                {name: "isVotingNow", type: "bool"},
              ],
              name: "vote",
              type: "tuple",
            },
          ],
        },
        {
          name: "voteCount",
          inputs: [],
          outputs: [{name: "voteCount", type: "uint256"}],
        },
        {
          name: "connectors",
          inputs: [],
          outputs: [
            {
              components: [
                {name: "root_address", type: "address"},
                {name: "souint", type: "uint256"},
                {name: "status", type: "bool"},
              ],
              name: "connectors",
              type: "map(address,tuple)",
            },
          ],
        },
        {
          name: "walletConnector",
          inputs: [],
          outputs: [{name: "walletConnector", type: "map(address,address)"}],
        },
      ],
      data: [{key: 1, name: "soUINT", type: "uint256"}],
      events: [],
      fields: [
        {name: "_pubkey", type: "uint256"},
        {name: "_timestamp", type: "uint64"},
        {name: "_constructorFlag", type: "bool"},
        {name: "soUINT", type: "uint256"},
        {name: "codeDEXclient", type: "cell"},
        {name: "codeDEXpair", type: "cell"},
        {name: "codeDEXconnector", type: "cell"},
        {name: "codeRootToken", type: "cell"},
        {name: "codeTONTokenWallet", type: "cell"},
        {name: "isCodeInit", type: "map(uint8,bool)"},
        {name: "governance", type: "address"},
        {name: "rootDEX", type: "address"},
        {name: "voteForWalletDEX", type: "address"},
        {name: "voteAgainstWalletDEX", type: "address"},
        {name: "walletsCount", type: "uint8"},
        {name: "roots", type: "map(address,map(address,address))"},
        {
          components: [
            {name: "root0", type: "address"},
            {name: "root1", type: "address"},
            {name: "rootLP", type: "address"},
          ],
          name: "pairs",
          type: "map(address,tuple)",
        },
        {name: "pairKeys", type: "address[]"},
        {name: "creatorForPair", type: "map(address,address)"},
        {
          components: [
            {name: "pair", type: "address"},
            {name: "root0", type: "address"},
            {name: "root1", type: "address"},
          ],
          name: "dataForRootAB",
          type: "map(address,tuple)",
        },
        {name: "pubkeys", type: "map(uint256,address)"},
        {name: "clients", type: "map(address,uint256)"},
        {name: "clientKeys", type: "address[]"},
        {name: "balanceOf", type: "map(address,uint128)"},
        {name: "msgOf", type: "map(address,string)"},
        {
          components: [
            {name: "start", type: "uint256"},
            {name: "duration", type: "uint256"},
            {name: "code", type: "cell"},
            {name: "pointer", type: "uint8"},
            {name: "selector", type: "uint8"},
            {name: "voteFor", type: "uint128"},
            {name: "voteAgainst", type: "uint128"},
            {name: "isVotingNow", type: "bool"},
          ],
          name: "vote",
          type: "tuple",
        },
        {name: "voteCount", type: "uint256"},
        {
          components: [
            {name: "root_address", type: "address"},
            {name: "souint", type: "uint256"},
            {name: "status", type: "bool"},
          ],
          name: "connectors",
          type: "map(address,tuple)",
        },
        {name: "walletConnector", type: "map(address,address)"},
      ],
    },
    tvc: "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",
    code: "",
  },
};
